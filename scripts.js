function innerElements() {

    var str = '';
    var variants = ["Системою числення називається", "Програмний код (текст програми) на мові високого рівня створюється за допомогою:", "Компонувальник комп’ютерної програми", "Інтерпретатор комп’ютерної програми", "Помилки, пов’язані з порушенням правил граматики в тексті програми, написаної мовою високого рівня, називаються", "Налагодження програмного коду – це", "Мова програмування – це", "(C++) В ідентифікаторах програмних об’єктів можна використовувати", "Лексема в мові програмуванні – це", "Ключове слово в мові програмуванні – це", "(C++) Блоком програмного коду вважається послідовність операторів, обмежена", "(C++) Escape-послідовність – це рядок, що починається з символу", "(C++) Знак операції – це", "(C++) Коментар – це текст, що", "(C++) Прості типи даних – це", "(C++) Складені типи даних – це", "(C++) До цілих типів даних належать", "(C++) До дійсних типів даних належать", "(C++) Логічний тип даних позначається ключовим словом", "(C++) Перелічуваний тип даних позначається ключовим словом", "(C++) Директиви процесора – це команди, які виконуються", "(C++) Директиви процесора починаються з символу", "(C++) Головна функція програми має ім'я:", "(C++) Змінна – це", "(C++) Ініціалізація змінної – це", "(C++) Область дії ідентифікатора – це", "(C++) Змінна, визначена всередині блоку програмного коду, називається", "(C++) Областю дії глобальної змінної є", "(C++) Для заокруглення значення змінної а до найменшого цілого, але не меншого, ніж a, можна використати функцію", "(C++) Для заокруглення значення змінної а до найбільшого цілого, але не більшого, ніж a,  можна використати функцію", "(C++) Команди потокового введення-виведення описані в модулі", "(C++) Команда виведення даних на екран монітору має вигляд", "(C++) Команда введення даних з клавіатури має вигляд", "(C++) Префіксна форма запису операції інкременту виглядає так:", "(C++) До унарних арифметичних операцій належать:", "(C++) До бінарних арифметичних операцій належать:", "(C++) Операціями присвоювання, суміщеними з іншими операціями, є", "(C++) До унарних логічних операцій належать:", "(C++) Результат операції && дорівнює", "(C++) Результат операції || дорівнює", "(C++) Перевірка двох цілих значень на рівність виконується оператором", "(C++) Операції зсуву вліво позначаються лексемою", "(C++) Виконання операторів тіла циклу називається", "У мові С++ є такі різновиди операторів циклу", "(C++) while <умова> <оператор> є циклом", "(C++) Тіло циклу виконується завжди хоча б один раз в операторі циклу", "(C++) У цикл з передумовою або постумовою для запобігання зациклення потрібно", "(C++) Для примусового переривання циклу в його тіло слід включити оператор", "(C++) Пропуск усіх команд у тілі циклу і перехід до наступної ітерації, здійснюється після оператора", "(C++) Заголовок функції починається з ключового слова void", "(C++) Ключове слово return використовується в тілі функцій,", "(C++) Після імені функції ставляться круглі дужки", "(C++) Аргументи функцій", "(C++) Тіло функції – це послідовність команд виконання алгоритму, розташована після заголовку функції", "(C++) Значення, що повертається функцією, зазначається після ключового слова", "У мові С++ одне і те саме ім’я функції", "(C++) Якщо глобальній і локальній змінній присвоїти однакове ім’я, то", "(C++) Отримати доступ до глобальної змінної в області видимості локальної змінної", "(C++) Параметри, імена яких вказані в заголовку функції, називаються", "(C++) Параметри, значення яких передаються функції під час її виклику, називаються", "(C++) Зміна параметрів-значень усередині функції", "(C++) В разі потреби змінювати значення аргументів функції за її межами, необхідно в її заголовку застосовувати", "(C++) До посилальних типів даних належать", "(C++) Покажчики", "(C++) Посилання є", "(C++) Операцією отримання адреси є", "(C++) Покажчик, що не адресує жодну змінну, може дорівнювати", "(C++) В оголошенні покажчика синтаксисом передбачений символ", "(C++) В оголошенні посилання синтаксисом передбачений символ", "(C++) Над покажчиками можна виконувати такі арифметичні операції:", "(C++) Операція розмінування покажчика визначає", "(C++) До функції можна застосувати такі операції:", "(C++) Оголошення покажчика на функцію та заголовки функцій, на які посилатиметься цей покажчик,", "(C++) Операції new і delete застосовуються", "(C++) Розподіл динамічної пам'яті за допомогою функцій malloc() і calloc() потребує її звільнення за допомогою функції", "(C++) Способами створення складних структур даних є:", "(C++) Одновимірний масив – це", "(C++) Тип елементів масиву називається", "(C++) Порядковий номер елемента в масиві називається", "(C++) Кількість елементів масиву називається", "(C++) Для доступу до окремого елемента масиву застосовується операція індексування", "(C++) В оголошенні масиву після його імені в квадратних дужках вказується", "Синтаксис оголошення змінної матричного типу в мові С++ виглядає так:", "(C++) Доступ до елементів матриці здійснюється операцією індексування", "(C++) Розмір оперативної пам'яті для розташування двовимірного масиву", "(C++) Результатом обчислення сум елементів матриці A[m][n] по рядках буде", "(C++) Результатом обчислення сум елементів матриці A[m][n] по стовпцях буде", "(C++) Результатом транспонування матриці A[m][n] буде матриця", "(C++) Номером останнього рядку матриці A[m][n] є", "(C++) Номером останнього стовпця матриці A[m][n] є", "(C++) Синтаксис оголошення змінної рядкового типу, як масиву символів, такий:", "(C++) Максимальне значення довжини рядка типу масиву символів", "(C++) Доступ до i-го символу рядку char str[10] можна здійснювати так:", "(C++) Довжину рядку s типу масиву символів можна визначити за допомогою функції", "(C++) Структура struct – це", "(C++) Змінні, що входять до складу структури struct, називаються", "(C++) Звернення до полів структури struct здійснюється через складене ім’я, що містить операцію доступу", "(C++) Поле структури struct може мати", "(C++) Обсяг пам'яті, що виділяється компілятором для зберігання даних типу структури struct,", "(C++) Для екземплярів структур struct як цілісних об’єктів означені операції", "CLR – це:", "MSIL – це:", "JIT-компілятор здійснює перетворення", "(С#) Простір імен", "(C#) Директива using", "(С#) Консольна програма містить метод", "(C#) Клас Console розташований в бібліотеці", "(C#) Метод WriteLine() класу Console здійснює", "(C#) Метод ReadLine() класу Console здійснює", "(C#) Значення типу char – це:", "(C#) Перетворення вбудованих типів даних бувають", "(C#) При неявному перетворенні типів", "(C#) При явному перетворенні типів перед змінною, що стоїть справа від знаку присвоєння, зазначається потрібний тип даних", "(C#) В оголошенні перерахованого типу даних використовується ключове слово", "(С#) Оголошення одновимірного масиву має такий стнтаксис:", "(C#) Доступ до елементів одновимірного масиву здійснюється по індексу, що зазначається:", "(С#) оголошення двовимірного масиву має такий синтаксис:", "(C#) Доступ до елементів двовимірного масиву numbers здійснюється так:", "(C#) Кількість елементів масиву numbers можна визначити так:", "(C#) Додавання елементів у список класу List здійснюється за допомогою методів", "(C#) Видалення елементів зі списку класу List здійснюється за допомогою методів", "(C#) Операторами циклів є:", "(C#) Оператор циклу foreach доцільно використовувати для", "Функція в C#:", "(C#) Для передачі в функцію параметрів по посиланню можна використовувати ключові слова", "(C#) Ключові слова ref і out зазначаються", "(C#) Метод IsNullOrEmpty(s) класу String повертає true, якщо:", "(C#) Метод Compare(s1, s2) класу String повертає 0, якщо:", "(C#) Метод IndexOf() класу String", "(C#) Метод Remove() класу String", "(C#) Отримати підрядок з рядку класу String, починаючи з вказаної позиції можна за допомогою методу", "(C#) Замінити вказаний підрядок на інший в рядку класу String можна за допомогою методу", "(C#) Розбити рядок класу String на декілька підрядків по вказаному символу можна за допомогою методу", "(C#) Метод Contains() класу String", "Базовими поняттями об’єктно-орієнтованого програмування є", "Базовими концепціями об’єктно-орієнтованого програмування є", "Функції – члени класу називаються", "Об'єкт в ООП – це", "Клас в ООП – це", "Інкапсуляція в об’єктно-орієнтованому програмуванні – це", "Поліморфізм в об’єктно-орієнтованому програмуванні – це", "Успадкування в об’єктно-орієнтованому програмуванні – це", "(С++) Доступ до членів класу здійснюється з використанням операторів", "(С++) Реалізація методу класу може здійснюватися", "(С++) Класи, на основі яких будуються інші класи, називаються", "(С++) Класи, які будуються на основі інших класів, називаються", "(С++) Ім'я базового класу зазначається в описі похідного класу", "(С++) Віртуальна функція позначається ключовим словом virtual", "(С++) При успадкуванні похідний клас набуває властивості та методи базового класу", "(С++) До захищеного члену класу (protected:) можуть отримати доступ", "(С++) Клас, який містить віртуальну функцію, називається", "(С++) Чисто віртуальна функція – це функція,", "(С++) Клас, що містить хоча б одну чисто віртуальну функцію, називається", "(С++) Абстрактний клас", "(С++) Конструктор класу", "(С++) Ім'я конструктора класу", "(С++) Деструктор класу зазвичай використовується для", "(С++) Ім'я деструктора класу", "(С++) В описі класу", "(С++) При завершенні роботи програми", "(C#) Методи класу, що не повертають значення", "(C#) При оголошенні члену класу без модифікатора доступу він є", "(C#) Для відкритого члену класу застосовується модифікатор", "(C#) Для захищеного члену класу застосовується модифікатор", "(C#) Член класу, оголошений з модифікатором protected  має доступ", "(C#) Ключове слово virtual зазначається", "(C#) Ключове слово override зазначається", "(C#) При перевизначенні методу класу", "(C#) Динамічна диспетчеризація методів класу – це", "(C#) Модифікатор abstract зазначається в заголовку методу класу", "(C#) Модифікатор abstract можна використовувати", "(C#) Усі похідні класи абстрактних класів повинні", "(C#) Ім’я інтерфейсу зазначається", "(C#) Делегат – це об'єкт, який може посилатися", "(C#) Події – це члени класу, які оголошуються з використанням ключового слова", "(C#) Події класу активізуються за допомогою", "(C#) Для включення події в список обробників подій класів застосовується ключове слово", "(C#) Для видалення події зі списку обробників подій класів застосовується ключове слово", "(Java) Клас, який успадковується, називається", "(Java) В описі підкласу перед іменем суперкласу застосовується ключове слово", "(Java) Класи, які не можуть мати нащадків позначаються модифікатором", "(Java) Модифікатором класу, який встановлюється за замовчуванням, є", "(С++Builder) Проект (Project) – це", "(С++Builder) Компонент (component) – це", "(С++Builder) Форма (Form) – це", "(С++Builder) Властивість (property) компоненту визначає", "(С++Builder) Подія (event) компоненту – це", "(С++Builder) Інспектор об’єктів містить такі закладки:", "(С++Builder) Файлова структура проекту відображається в вікні", "(С++Builder) Файл, що містить опис класу форми, має розширення", "(С++Builder) На панелі Structure в режимі проектування відображається", "(С++Builder) Властивості Width i Height компонентів визначають", "(С++Builder) Місце розташування компоненту в контейнері визначається властивостями", "(С++Builder) Вирівнювання компоненту по лівому краю контейнера виконується при значенні властивості Align", "(С++Builder) Обмеження максимальної ширини компонента виконується при встановленні потрібного значення властивості Constraints", "(С++Builder) Відображення контекстних підказок компоненту забезпечується властивостями", "(С++Builder) Керування доступом до компонента здійснюється за допомогою властивості", "(С++Builder) Надпис на кнопках міститься у властивості", "(С++Builder) В натиснутому стані може бути зафіксована кнопка", "(С++Builder) Вимкнути Timer можна таким чином", "(С++Builder) Надписи кнопок компоненту RadioGroup містяться у властивості", "(С++Builder) Номер обраного перемикача в групі RadioGroup визначається властивістю", "(С++Builder) Стан перемикача CheckBox визначається властивістю", "(С++Builder) Рядок, що редагується в полі Edit, міститься у властивості", "(С++Builder) Заборону внесення змін в полях редагування можна здійснити за допомогою властивості", "(С++Builder) Багаторядковий текст можна відображати в компонентах", "(С++Builder) Текст багаторядкових полів редагування міститься у властивості", "(С++Builder) Основним методом, що виконує відкриття будь-якого стандартного діалогу, є", "(С++Builder) Елементи списку ListBox зберігаються у властивості", "(С++Builder) Кількість елементів списку ListBox визначається властивістю", "(С++Builder) Значенням властивості Style списку ComboBox, яке дозволяє лише обирати елементи зі списку і забороняє введення даних в полі редагування, є", "(С++Builder) Кількість рядків та стовпців таблиці StringGrid, зберігається в її властивостях", "(С++Builder) Індекси виділеної клітинки таблиці StringGrid, зберігається в її властивостях", "(С++Builder) Можливість змінювати за допомогою миші розміри стовпців та рядків таблиці StringGrid надається за допомогою властивості", "(С#, WinForms) Заголовок форми визначається її властивістю", "(С#, WinForms) Фоновий колір форми визначається її властивістю", "(С#, WinForms) Положення форми по відношенню до верхнього лівого кута екрану визначається її властивістю", "(С#, WinForms) Розміри форми  визначається її властивістю", "(С#, WinForms) Колір шрифту  визначається її властивістю", "(С#, WinForms) Параметр sender обробника події", "(С#, WinForms) Забезпечити відображення повідомлення в процесі роботи проекту можна таким чином:", "(С#, WinForms) Список компонентів, що розташовані в контейнері, міститься в його властивості", "(С#, WinForms) Програмно додати компонент в контейнер", "(С#, WinForms) Програмно видалити компонент з контейнера за допомогою методу  його властивості Controls", "(С#, WinForms) Контейнером з декількома вкладками (сторінками) є компонент", "(С#, WinForms) Графічне зображення фону кнопки Button визначається за допомогою властивості", "(С#, WinForms) Для введення і редагування тексту призначені текстові поля – елементи", "(С#, WinForms) Для введення і редагування багаторядкового тексту в компоненті TextBox потрібно встановити значення true властивості", "(С#, WinForms) При зміні стану перемикачів CheckBox і RadioButton генерується подія", "(С#, WinForms) Видалення елементів списку ListBox здійснюється за допомогою його методів", "(С#, WinForms) При зміні виділеного елемента в ListBox виникає подія", "(С#, WinForms) Всі обрані елементи списку CheckListBox містяться у властивості", "(С#, WinForms) Індекси всіх обраних елементів списку CheckListBox містяться у властивості", "(С#, WinForms) Можливість вибору числа з визначеного діапазону забезпечується за допомогою компоненту", "(Java) Пакет awt – це набір класів, які реалізують", "(Java, пакет awt) Практично всі класи візуальних компонентів є нащадками абстрактного класу", "(Java, пакет awt) Прямими нащадками класу Container є", "(Java, пакет awt) Клас Applet успадкований від класу", "(Java, пакет awt) Клас Frame – це", "(Java, пакет awt) Клас Canvas – це", "(Java, пакет awt) Клас TextArea – це", "Термін «програмна інженерія» вперше було використано у:", "Основа програмної інженерії – це:", "Програмна інженерія – це:", "Теоретичний фундамент програмної інженерії складається з:", "Програмна інженерія як наукова дисципліна", "Теорія програмування – це:", "Програмна інженерія як інженерна дисципліна – це:", "Механізм доступу до баз даних – це", "Механізм доступу до баз даних", "Провайдером даних у термінології ADO.NET є:", "До провайдерів даних, що постачаються з .NET Framework належать:", "Будь-який провайдер ADO.NET включає власні реалізації таких універсальних класів:", "З’єднання з БД за технологією ADO.NET виконується з використанням класу:", "Клас  Command за технологією ADO.NET забезпечує обмін даними між проектом і БД:", "Клас  Command за технологією ADO.NET забезпечує обмін даними між проектом і БД:", "Екземпляри класу DataReader за технологією ADO.NET можна отримувати тільки за допомогою методу ExecuteReader() об'єкта:", "Клас DataAdapter за технологією ADO.NET:", "В ADO.NET рядок підключення до БД ConnectionString є :", "В ADO.NET підключення до БД здійснюється методом класу OleDbConnection", "ADO.NET властивістю класу OleDbConnection, що визначає стан підключення до БД є:", "ADO.NET виконання команд на сервері БД виконується об’єктом класу", "В ADO.NET SQL-запит на виконання команди в БД на сервері міститься", "ADO.NET CreateCommand(), що створює об’єкт команди є методом класу", "В ADO.NET один результат виконання SQL-запиту в БД повертається методом", "Класи ADO.NET можна умовно розділити на такі категорії:", "В ADO.NET закриття з’єднання до БД здійснюється методом класу OleDbConnection", "В ADO.NET результат виконання методу ExecuteScalar() класу OleDbCommand має тип даних", "В ADO.NET запити, що повертають набори даних, виконуються за допомогою методу", "В ADO.NET результатом виконання методу ExecuteReader() класу OleDbCommand є:", "В ADO.NET метод Read() класу OleDbDataReader", "В ADO.NET об’єкт reader класу OleDbDataReader повертає значення поля з другим порядковим номером  набору даних таким чином:", "В ADO.NET об’єкт reader класу OleDbDataReader повертає значення поля 'Країна' набору даних таким чином:", "В ADO.NET об’єкт reader класу OleDbDataReader повертає індекс поля 'Країна' набору даних таким чином:", "В ADO.NET параметри SQL-запиту об’єкту команд класу OleDbCommand містяться в його властивості", "В ADO.NET параметри в SQL-запиті об’єкту команд класу OleDbCommand позначаються таким чином:", "В ADO.NET значення i-го параметру SQL-запиту об’єкту command команд класу OleDbCommand задаються таким чином:", "В ADO.NET клас OleDbDataAdapter реалізує всі необхідні методи для кешування даних у сховищі – об’єкті класу:", "В ADO.NET набір даних DataSet обробляється", "В ADO.NET таблиці набору даних DataSet містяться в його властивості", "В ADO.NET колекція зв’язків між таблицями набору даних DataSet зберігається в його властивості", "В ADO.NET колекція полів таблиці DataTable зберігається в її властивості", "В ADO.NET рядки (записи) таблиці DataTable зберігається в її властивості", "В ADO.NET створення об’єкту нового рядку (запису) таблиці DataTable виконується її методом", "В ADO.NET метод AcceptChanges() таблиці DataTable", "В ADO.NET заголовок поля таблиці  DataTable визначається властивістю класу DataColumn", "В ADO.NET позиція поля таблиці  DataTable визначається властивістю класу DataColumn", "В ADO.NET тип поля таблиці  DataTable визначається властивістю класу DataColumn", "В ADO.NET створення об’єкту row класу DataRow для додавання рядку в таблицю table класу DataTable виконується таким чином:", "В ADO.NET звернення до поля 'Місто', що має індекс 1, об’єкту row класу DataRow виконується таким чином:", "В ADO.NET додавання об’єкту row класу DataRow в таблицю table класу DataTable виконується таким чином:", "В ADO.NET створення об’єкту row класу DataRow для редагування i-го рядку в таблиці table класу DataTable виконується таким чином:", "В ADO.NET пошук рядку таблиці DataTable за первинним ключем можна здійснити за допомогою методу класу DataRow", "В ADO.NET рядок коду DataRow row = table.Rows.Find(20)", "В ADO.NET видалення i-го рядку з таблиці table класу DataTable можна виконати таким чином:", "В ADO.NET видалення i-го рядку з таблиці table класу DataTable з використанням методу Delete() класу DataRow можна виконати таким чином:", "В ADO.NET фільтр даних у таблиці  можна виконати за допомогою методу класу DataTable", "В ADO.NET параметрами методу Select класу DataTable є", "В ADO.NET встановлення зв’язку між таблицями БД може здійснюватися з використанням:", "В ADO.NET конструктор класу DataRelation", "В ADO.NET об’єкт класу DataRelation додається в колекцію властивості Relation набору даних – об’єкту DataSet методом", "В ADO.NET зв'язок між таблицями класу DataTable з використанням об’єкту класу  DataRelation виконується", "В ADO.NET метод GetChildRows() властивості (класу) Rows таблиці DataTable призначений для:", "В ADO.NET метод GetParentRow() властивості (класу) Rows таблиці DataTable призначений для:", "В ADO.NET метод GetChildRows() властивості (класу) Rows таблиці DataTable", "В ADO.NET метод GetParentRow() властивості (класу) Rows таблиці DataTable", "В ADO.NET метод GetChildRows() властивості (класу) Rows таблиці DataTable повертає:", "В ADO.NET метод GetParentRow () властивості (класу) Rows таблиці DataTable повертає:", "В System.Windows.Forms компонент BindingSource призначений для", "В System.Windows.Forms властивість DataSource компонента BindingSource може містити ім’я", "В ADO.NET після завершення діалогу «Мастер настройки источника данных»", "Відображення вмісту таблиць БД у вигляді сітки на формі проекту здійснюється за допомогою компоненту System.Windows.Forms", "Візуальні компоненти System.Windows.Forms для відображення даних таблиць БД використовують властивість:", "В процесі проектування зв’язку між таблицею БД та компонентом-сіткою System.Windows.Forms (DataGridView) створюються об’єкти класів", "Компонент BindingSource є класом бібліотеки", "Структуру БД, приєднану до проекту за технологією ADO.NET шляхом проектування, можна побачити в вікні IDE Visual Studio", "Ім’я набору даних (об’єкту класу ADO.NET) за замовчуванням встановлюється за таким правилом:", "Ім’я набору даних (об’єкту класу ADO.NET)", "В System.Windows.Forms компонент BindingNavigator забезпечує:", "В System.Windows.Forms зв'язок компонента BindingNavigator з таблицею БД здійснюється через його властивість", "В System.Windows.Forms налаштування зв'язку компонента TextBox з полем таблиці БД здійснюється через його властивість", "В System.Windows.Forms контролювати формат даних, введених користувачем з клавіатури в текстове поле TextBox можна за допомогою обробника події", "Програмна інженерія як виробнича дисципліна вивчає:", "Програмна інженерія як дисципліна керування", "Програмна інженерія як економічна дисципліна – це:", "Процес розробки програмного забезпечення автоматизованих інформаційних систем – це:", "Життєвий цикл програмного забезпечення – це:", "Процес життєвого циклу програмного забезпечення – це:", "Процеси життєвого циклу програмного забезпечення поділяється на:", "Групами процесів життєвого циклу програмного забезпечення є:", "Процес «придбання» життєвого циклу програмного забезпечення належить до групи:", "Процеси «управління» та «навчання» життєвого циклу програмного забезпечення належить до групи:", "До допоміжних процесів життєвого циклу програмного забезпечення належать такі:", "До організаційних процесів життєвого циклу програмного забезпечення належать такі:", "Процес «придбання» життєвого циклу програмного забезпечення складається з таких дій та задач:", "Процес «поставки» » життєвого циклу програмного забезпечення складається з таких дій:", "Процес «розробки» життєвого циклу програмного забезпечення складається з таких дій:", "Процес «супроводження» життєвого циклу програмного забезпечення складається з таких дій:", "Процес «управління конфігурацією»  життєвого циклу програмного забезпечення складається з таких дій:", "Модель життєвого циклу програмного забезпечення – це:", "Кваліфікаційна вимога – це:", "Модель життєвого циклу програмного забезпечення – це", "Видами моделей життєвого циклу програмного забезпечення є:", "Каскадна модель життєвого циклу програмного забезпечення має такі недоліки:", "Спіральна модель життєвого циклу програмного забезпечення – це:", "Спіральна модель ЖЦПЗ має такі недоліки:", "RAD-модель життєвого циклу програмного забезпечення – це:", "Компонентно-орієнтована модель життєвого циклу програмного забезпечення – це:", "До переваг використання компонентно-орієнтованої моделі життєвого циклу програмного забезпечення належать:", "До стратегій конструювання програмного забезпечення належать:", "Стратегією конструювання програмного забезпечення, що реалізує RAD-модель життєвого циклу програмного забезпечення, є:", "Якість процесів розробки програмного забезпечення визначається моделлю:", "Базовим поняттям СММ-моделі якості процесів розробки програмного забезпечення є:", "Зовнішній опис програмного продукту містить:", "Зовнішній опис програмного продукту є початковим документом для таких паралельних процесів:", "Вхідним документом для розробки зовнішнього опису програмного продукту є визначення", "Визначенню вимог передує процес системного аналізу, в якому з’ясується:", "Спрощена версія програмного продукту називається:", "Функціональною специфікацією програмного продукту називається:", "Специфікація якості програмного продукту:", "Визначення вимог до програмного продукту:", "До примітивів якості програмного продукту належать:", "Функціональна специфікація програмного продукту складається з таких частин:", "До методів контролю зовнішнього опису програмного продукту належать:", "В процесі розробки програмного продукту використовуються тестові варіанти, які:", "Тестування програмного продукту забезпечує:", "Існують такі принципи тестування програмного продукту:", "При тестуванні програмного продукту за принципом «чорної скрині»", "При тестуванні програмного продукту за принципом «білої скрині»:", "При тестуванні програмного продукту за принципом «чорної скрині»:", "При тестуванні програмного продукту за принципом «білої скрині»:", "Тестування «чорної скрині» забезпечує пошук таких категорій помилок у програмному продукті:", "В тестових варіантах, що реалізують принцип «білої скрині»", "Тестування програмного продукту складається з таких кроків:", "Типовими помилками, що визначаються на етапі тестування елементів програмного продукту, є:", "Типовими помилками, що визначаються на етапі тестування інтеграції програмного продукту, є", "На етапі тестування правильності програмного продукту", "Для виявлення помилок на етапі тестування правильності програмного продукту використовуються процеси, до складу яких входять", "До основних типів системних тестів програмного продукту належать:", "Розрізняють такі групи методів налагодження програмних продуктів:", "До групи документів керування розробкою програмних продуктів належать:", "До групи документів, що входять до складу  програмних продуктів належать:", "Документація користувача використовується при:", "У відповідності до стандартів документація користувача повинна містити такі розділи:", "У відповідності до стандартів документація по супроводженню програмного продукту повинна містити такі розділи:", "Керування розробкою програмного продукту – це діяльність, направлена на:", "Керування розробкою програмних продуктів складається з таких процесів:", "Найпоширенішими є такі підходи до організації бригад розробників програмного забезпечення:", "Розмірно-орієнтовані метрики програмних продуктів базуються на:", "Функціонально-орієнтовані метрики програмних продуктів базуються на:", "До кількісних метрик програмного продукту належать:", "Для обчислення функціонально-орієнтованих метрик програмного продукту використовуються такі інформаційні характеристики:", "До переваг функціонально-орієнтованих метрик програмних продуктів належать:", "CASE-технології представляють собою:", "Тестування – це…", "Відладка (debug, debugging) – це:", "Основу системи CORBA становить:", "Java-технологія базується на:", "CASE-технології дозволяють:", "Репозиторій, як основа CASE-засобу, повинен:", "Діаграммери в складі CASE-засобів забезпечують:", "Класифікація за типами відображає функціональну орієнтацію CASE-засобів на ті або інші процеси життєвого циклу. За таким принципом виділяють такі групи:", "Класифікація CASE-засобів за категоріями визначає ступінь інтегрованості за функціями, що виконуються, і включає:", "Процес впровадження CASE-засобів включає наступні етапи:", "Ключем до успішного впровадження CASE-засобів є готовність об’єкту автоматизації, яка включає в себе наступні аспекти:", "В процесі становлення та розвитку програмної інженерії виділено наступні етапи:", "До основної групи належать наступні процеси ЖЦПЗ:", "До допоміжної групи належать наступні процеси ЖЦПЗ:", "До  організаційної групи належать наступні процеси ЖЦПЗ:", "Види моделей життєвого циклу програмного забезпечення:", "Спрощена версія програмного продукту називається", "Функціональною специфікацією програмного продукту називається", "Є такі внутрішні характеристики якості ПЗ:", "Є такі зовнішні характеристики якості ПЗ:", "Файл autoexec.bat, який звичайно входить до складу файлів кореневого каталогу в багатьох ОС компанії Microsoft, належить до категорії:", "За допомогою списку прав доступу операційна система забезпечує:", "Багато ОС підтримують імена файлів, що полягають із двох частин (ім’я + розширення). Це робиться для того, щоб", "Що потрібно зробити, щоб виявити тупик?", "Як можна вивести систему з тупикової ситуації?", "Як правильно боротися з тупиком, який може виникнути при використанні принтера?", "Коли процес, що перебуває в стані «закінчив виконання», може остаточно покинути систему?", "Які з перерахованих нижче компонентів входять у регістровий контекст процесу?", "Що таке мультипрограмна обчислювальна система?", "Можливість інтерактивної взаємодії користувача й програми виникає з появою:", "Матриця доступу використовується для:", "Який метод використовується для зберігання елементів матриці доступу в ОС Unix?", "Які з перерахованих ситуацій виникають синхронно з роботою процесора:", "Які з перерахованих функцій базової підсистеми введення-виведення можуть бути делеговані драйверам:", "На яких параметрах може ґрунтуватися довгострокове планування процесів?", "До якого з перерахованих алгоритмів прагне поведінка алгоритму RR у міру збільшення кванта часу?", "Чому запис у таблиці сторінок у схемі віртуальної пам’яті відрізняється від відповідного запису у випадку простої сторінкової організації?", "Яка зі схем керування пам’яттю придатна для організації віртуальної пам’яті?", "Схема виділення дискового простору зв’язним списком блоків не знайшла широкого застосування, тому що:", "Для чого застосовується журналізація у файлових системах?", "Скільки вилучених адрес може мати мережний комп’ютер?", "Який рівень еталонної моделі OSI/ISO відповідає за створення контрольних крапок при спілкуванні вилучених процесів?", "Для розв’язку проблеми інформаційної безпеки необхідно:", "Конфіденційна система забезпечує:", "Серед несиметричних алгоритмів шифрування найбільш відомий:", "Внутрішня фрагментація – це:", "В чому обумовлена ефективність ієрархічної схеми пам’яті?", "Сегменти – це області пам’яті, призначені для:", "Яка категорія засобів зв’язку одержала найбільше поширення в обчислювальних системах?", "Які процеси можуть обмінюватися інформацією через pipe?", "Яку стратегію керування пам’яттю може реалізувати алгоритм виштовхування сторінок LRU?", "Який результат може мати аналіз біта модифікації, що входить до складу атрибутів сторінки?", "Термін «критична секція» ставиться:", "Які з умов для організації коректної взаємодії двох процесів за допомогою програмного алгоритму виконані для алгоритму «прапори готовності»?", "Операційні системи сімейства Unix це:", "Інженери якої фірми розробили перший варіант Unix?", "Якому стандарту має відповідати ОС сiмейства Unix?", "Яке з нижче наведених понять є фундаментальним для Unix?", "Яка мова програмування найчастіше використовується для розробки Unix?", "Яким є традиційний спосіб взаємодії користувача з Unix?", "Яке ім’я у суперкористувача в Unix?", "Як називається програма, що виконується в даний момент?", "З якою ліцензією розповсюджується ОС Linux?", "Як називається графічна підсистема, що використовується в Linux?", "Яка з команд наведених нижче використовується для отримання довідки по будь-якій команді системи Windows:", "Як називається система, що надає користувачам i процесам ресурси довгострокової пам’яті?", "Як називається структура, що зберігає всю необхідну інформацію про файл?", "Скільки імен може мати файл в Unix та Windows?", "Які символи не можуть входити в імена файлів?", "Як називається структура, що містить набір файлів?", "Як називається каталог найвищого рівня?", "Як називається список імен вкладених каталогів, що починається з кореневого i закінчується ім’ям файлу?", "Яка команда використовується для переходу в інший каталог?", "Який псевдонiм має власний каталог користувача?", "В якому каталозі розміщуються каталоги користувачів?", "Що з нижче наведеного є файлами в Unix?", "На які типи поділяються фізичні пристрої в Unix?", "Яка команда використовується для створення твердих та символічних посилань?", "Як називається кореневий каталог файлової системи Linux?", "На які категорії розділяються користувачі відносно файлів?", "Які дії над файлами визначають права доступу до файлів?", "Яка команда застосовується для зміни прав доступу до файлів в Linux?", "Яка команда застосовується для копіювання файлів в MS-DOS?", "Яка команда застосовується для підключення файлових систем в загальне дерево каталогів?", "Як називається сукупність коду й даних, що завантажені в пам’ять комп’ютера?", "Як називається процес, що вже не виконується й не займає пам’ять, але про який є запис в таблиці процесів?", "Яка команда показує список процесів, що виконуються?", "Яким системним викликом в Unix виконується запуск процесів?", "Як називається коротке повідомлення, що посилається процесом чи системою іншому процесу?", "На якому стандарті базується графічне середовище Linux?", "Яку модель застосовує система X Window System?", "Що з нижченаведеного не є віконним менеджером X Window System?", "Що або хто створює вбудовані змінні оболонки?", "Як називається міжмережевий протокол, що забезпечує транспортування без додаткової обробки даних з однієї машини на іншу?", "Як називається міжмережевий протокол керування повідомленнями?", "Як називається протокол перетворення адрес, що виконує трансляцію логічних мережних адрес в апаратні?", "Як називається протокол керування передачею?", "Як називається апаратна адреса вузла мережі?", "Як називається вузол у мережі TCP/IP?", "Який додатковий елемент додають протоколи до IP-адреси?", "В С# визначення цифрового символу виконується методом класу Char:", "В System.Windows.Forms дозвіл на використання клавіші BackSpace в тестовому полі TextBox надається при позитивному результаті порівняння в обробнику події KeyPress", "В System.Windows.Forms прив’язка списку ComboBox до поля таблиця БД забезпечується вибором у його властивості DataSource екземпляру класу", "В System.Windows.Forms елементи, що відображаються списку ComboBox, прив’язаного до поля таблиця БД, визначаються його властивістю", "В System.Windows.Forms елементи списку ComboBox, прив’язаного до поля таблиця БД, визначаються за значенням ключового поля, що зберігається у його властивості", "В System.Windows.Forms значення ключового поля таблиці БД, обраного в прив’язаному списку ComboBox, міститься у його властивості"]

    for (var i = 0; i < variants.length; ++i){
        str += '<option value="' + String(variants[i]) + '" />';
    }

    var my_list = document.getElementById("tests_list");
    my_list.innerHTML = str;
}

function insertAnswers() {

    var input_value = document.getElementById('test_text').value;
    var text_1 = document.getElementById("text_1");
    var text_2 = document.getElementById("text_2");
    var text_3 = document.getElementById("text_3");

    readTextFile("../database/data.json", function(text){
        var data = JSON.parse(text);

        for (var i = 0; i < data.length; ++i){
            if (data[i]["test"] === input_value) {

                text_1.innerHTML = data[i]["variant_1"][0];

                if (data[i]["variant_1"][1] === "True") {
                    text_1.style.color = '#00b008'
                }
                else {
                    text_1.style.color = '#e03434'
                }

                text_2.innerHTML = data[i]["variant_2"][0];

                if (data[i]["variant_2"][1] === "True") {
                    text_2.style.color = '#00b008'
                }
                else {
                    text_2.style.color = '#e03434'
                }

                text_3.innerHTML = data[i]["variant_3"][0];

                if (data[i]["variant_3"][1] === "True") {
                    text_3.style.color = '#00b008'
                }
                else {
                    text_3.style.color = '#e03434'
                }
            }
        }
    });

}

function readTextFile(file, callback) {

    var rawFile = new XMLHttpRequest();
    
    rawFile.overrideMimeType("application/json");
    rawFile.open("GET", file, true);

    rawFile.onreadystatechange = function() {
        if (rawFile.readyState === 4 && rawFile.status == "200") {
            callback(rawFile.responseText);
        }
    }

    rawFile.send(null);
}